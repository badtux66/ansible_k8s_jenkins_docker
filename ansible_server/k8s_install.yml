---
- name: Setup Kubernetes
  hosts: k8s
  become: yes
  become_user: root
  become_method: sudo
  gather_facts: yes
  vars:
    ansible_become_pass: erkut+2023
  tasks:
    - name: Install required packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
        state: present

    - name: Add Docker repository signing key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present

    - name: Install Docker and containerd
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: present
        update_cache: yes

    - name: Copy daemon.json for Docker
      copy:
        src: daemon.json
        dest: /etc/docker/daemon.json
        owner: root
        group: root
        mode: 0644

    - name: Restart Docker
      systemd:
        name: docker
        state: restarted
        daemon_reload: yes

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

    - name: Comment out swap partition from fstab
      replace:
        path: /etc/fstab
        regexp: '^(.+swap.+)swap(.+)$'
        replace: '#\1swap\2'
        backup: yes

    - name: Add Kubernetes repository signing key
      apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Add Kubernetes repository
      apt_repository:
        repo: "deb https://apt.kubernetes.io/ kubernetes-xenial main"
        state: present

    - name: Install Kubernetes components
      apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: yes

    - name: Hold Kubernetes components at their current version
      ansible.builtin.dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - kubelet
        - kubeadm
        - kubectl

    - name: Initialize Kubernetes cluster (ignore pre-flight errors)
      command: kubeadm init --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors=all
      args:
        creates: /etc/kubernetes/admin.conf

    - name: Create .kube directory for root user
      file:
        path: /root/.kube
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: Copy Kubernetes admin config for root user
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: /root/.kube/config
        remote_src: yes
        owner: root
        group: root
        mode: 0644
      become: yes


    - name: Copy Kubernetes admin config for vagrant user
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/vagrant/.kube/config
        remote_src: yes
        owner: vagrant
        group: vagrant
        mode: 0644
      become: yes

    - name: Install Flannel networking
      become: yes
      command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
     
